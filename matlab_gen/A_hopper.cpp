//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// A_hopper.cpp
//
// Code generation for function 'A_hopper'
//

// Include files
#include "A_hopper.h"
#include <cmath>

// Function Definitions
void A_hopper(const double in1[12], const double in2[17], double A[36])
{
  double b_t84_tmp;
  double c_t84_tmp;
  double d_t84_tmp;
  double t13;
  double t15;
  double t16;
  double t17;
  double t18;
  double t2;
  double t21;
  double t22;
  double t23;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t38;
  double t39;
  double t4;
  double t40;
  double t54;
  double t59;
  double t6;
  double t64;
  double t67;
  double t68;
  double t68_tmp;
  double t69;
  double t69_tmp;
  double t7;
  double t70_tmp;
  double t71_tmp;
  double t73;
  double t73_tmp;
  double t74;
  double t75;
  double t77;
  double t80;
  double t80_tmp;
  double t83;
  double t84_tmp;
  double t9;
  // A_hopper
  //     A = A_hopper(IN1,IN2)
  //     This function was generated by the Symbolic Math Toolbox version 9.1.
  //     25-Sep-2022 00:50:42
  t2 = std::cos(in1[3]);
  t3 = std::cos(in1[4]);
  t4 = std::cos(in1[2]);
  t6 = std::sin(in1[2]);
  t7 = in1[3] + in1[4];
  t9 = in1[2] + in1[3];
  t13 = in2[11] * in2[11];
  t15 = in2[16] * in2[16];
  t22 = ((in2[2] + in2[3]) + in2[4]) + in2[0];
  t16 = std::cos(t7);
  t17 = std::cos(t9);
  t18 = in1[5] + t7;
  t7 += in1[2];
  t21 = std::sin(t9);
  t27 = in2[2] * (in2[8] * in2[8]);
  t28 = in2[3] * (in2[9] * in2[9]);
  t29 = in2[4] * (in2[10] * in2[10]);
  t30 = in2[3] * t13;
  t31 = in2[4] * t13;
  t32 = in2[4] * (in2[12] * in2[12]);
  t33 = in2[9] * in2[11] * in2[3] * t3;
  t13 = in2[11] * in2[12] * in2[4] * t3;
  t9 = in2[10] * in2[12] * in2[4] * std::sin(in1[5]);
  t23 = std::cos(t7);
  t3 = t18 + in1[2];
  t26 = std::sin(t7);
  t38 = t33 * 2.0;
  t39 = t13 * 2.0;
  t40 = t9 * 2.0;
  t54 = in2[10] * in2[11] * in2[4] * std::sin(in1[4] + in1[5]);
  t68_tmp = in2[9] * in2[16] * in2[3] * t16;
  t68 = t68_tmp / 2.0;
  t69_tmp = in2[12] * in2[16] * in2[4] * t16;
  t69 = t69_tmp / 2.0;
  t59 = -(t9 * 2.0);
  t71_tmp = in2[10] * in2[16] * in2[4] * std::sin(t18);
  t16 = t71_tmp / 2.0;
  t73_tmp = (in2[4] + in2[7]) + t29;
  t73 = t73_tmp + -t9;
  t7 = in2[4] * in2[10];
  t64 = t7 * std::cos(t3);
  t67 = -(t54 * 2.0);
  t74 = -t54 + t73;
  t80_tmp = ((((in2[6] + in2[7]) + in2[4]) + t28) + t29) + t32;
  t80 = (((t80_tmp + t33) + t13) + -t40) + -t54;
  t70_tmp = -(t7 * std::sin(t3));
  t7 = in2[3] * in2[9];
  t9 = in2[4] * in2[12];
  t75 = (t7 * t26 + t9 * t26) + t64;
  t77 = -t16 + t74;
  t83 = ((t68 + t69) + -t16) + t80;
  t84_tmp = in2[11] * in2[16];
  b_t84_tmp = (in2[5] + in2[6]) + in2[7];
  c_t84_tmp = in2[8] * in2[16] * in2[2] * t2;
  d_t84_tmp = t84_tmp * in2[3] * t2;
  t84_tmp = t84_tmp * in2[4] * t2;
  t26 = ((((((((((((((((b_t84_tmp + in2[4]) + t27) + t28) + t29) + t30) + t31) +
                  t32) +
                 t38) +
                t39) +
               -t40) +
              c_t84_tmp / 2.0) +
             d_t84_tmp / 2.0) +
            t84_tmp / 2.0) +
           -(t54 * 2.0)) +
          t68) +
         t69) +
        -t16;
  t33 = (t7 * t23 + t9 * t23) + t70_tmp;
  t7 = in2[2] * in2[8];
  t9 = in2[3] * in2[11];
  t13 = in2[4] * in2[11];
  t18 = ((t7 * t21 + t9 * t21) + t13 * t21) + t75;
  t16 = ((t7 * t17 + t9 * t17) + t13 * t17) + t33;
  t7 = in2[2] * in2[16];
  t9 = in2[3] * in2[16];
  t13 = in2[4] * in2[16];
  t3 = ((t7 * t6 / 2.0 + t9 * t6 / 2.0) + t13 * t6 / 2.0) + t18;
  t7 = ((t7 * t4 / 2.0 + t9 * t4 / 2.0) + t13 * t4 / 2.0) + t16;
  A[0] = t22;
  A[1] = 0.0;
  A[2] = t7;
  A[3] = t16;
  A[4] = t33;
  A[5] = t70_tmp;
  A[6] = 0.0;
  A[7] = t22;
  A[8] = t3;
  A[9] = t18;
  A[10] = t75;
  A[11] = t64;
  A[12] = t7;
  A[13] = t3;
  A[14] =
      ((((((((((((((((((((b_t84_tmp + in2[1]) + in2[4]) + t27) + t28) + t29) +
                     t30) +
                    t31) +
                   t32) +
                  t38) +
                 t39) +
                t59) +
               t67) +
              in2[2] * t15 / 4.0) +
             in2[3] * t15 / 4.0) +
            in2[4] * t15 / 4.0) +
           c_t84_tmp) +
          t68_tmp) -
         t71_tmp) +
        d_t84_tmp) +
       t84_tmp) +
      t69_tmp;
  A[15] = t26;
  A[16] = t83;
  A[17] = t77;
  A[18] = t16;
  A[19] = t18;
  A[20] = t26;
  A[21] =
      ((((((((((((in2[5] + in2[6]) + in2[7]) + in2[4]) + t27) + t28) + t29) +
            t30) +
           t31) +
          t32) +
         t38) +
        t39) +
       t59) +
      t67;
  A[22] = t80;
  A[23] = t74;
  A[24] = t33;
  A[25] = t75;
  A[26] = t83;
  A[27] = t80;
  A[28] = t80_tmp + t59;
  A[29] = t73;
  A[30] = t70_tmp;
  A[31] = t64;
  A[32] = t77;
  A[33] = t74;
  A[34] = t73;
  A[35] = t73_tmp;
}

// End of code generation (A_hopper.cpp)
