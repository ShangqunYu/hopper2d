//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// jacobian_a.cpp
//
// Code generation for function 'jacobian_a'
//

// Include files
#include "jacobian_a.h"
#include <cmath>

// Function Definitions
void jacobian_a(const double in1[12], const double in2[17], double J_a[18])
{
  double t2;
  double t5;
  // JACOBIAN_A
  //     J_a = JACOBIAN_A(IN1,IN2)
  //     This function was generated by the Symbolic Math Toolbox version 9.1.
  //     25-Sep-2022 00:50:44
  t2 = in1[2] + in1[3];
  t5 = in2[11] * std::cos(t2);
  t2 = in2[11] * std::sin(t2);
  J_a[0] = 1.0;
  J_a[1] = 0.0;
  J_a[2] = 0.0;
  J_a[3] = 0.0;
  J_a[4] = 1.0;
  J_a[5] = 0.0;
  J_a[6] = t5 + in2[16] * std::cos(in1[2]) / 2.0;
  J_a[7] = t2 + in2[16] * std::sin(in1[2]) / 2.0;
  J_a[8] = 0.0;
  J_a[9] = t5;
  J_a[10] = t2;
  J_a[11] = 0.0;
  J_a[12] = 0.0;
  J_a[13] = 0.0;
  J_a[14] = 0.0;
  J_a[15] = 0.0;
  J_a[16] = 0.0;
  J_a[17] = 0.0;
}

// End of code generation (jacobian_a.cpp)
